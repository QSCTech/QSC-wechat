<template>
    <view class="grade-page">
        <view class="overview-container">
            <view class="box">
                <view class="label">
                    总学分
                </view>
                <view class="item">
                    {{unittotal}}
                </view>
            </view>
            <view class="box">
                <view class="label">
                    学期绩点
                </view>
                <view class="item">
                    {{gpaList[1].termgpa || 'N/A'}}
                </view>
            </view>
            <view class="box">
                <view class="label">
                    累积绩点
                </view>
                <view class="item">
                    {{gpaList[1].cumulativegpa || 'N/A'}}
                </view>
            </view>
            <view class="box">
                <view class="label">
                    累积排名
                </view>
                <view class="item">
                    N/A
                </view>
            </view>
        </view>
        <view class="term-cell">
            <view wx:for-items="{{ gpaList }}" wx:for-index="index" wx:for-item="item" wx:key="index">
                <navigator url="termview?index={{index}}" class="term-container">
                    <view class="name">
                        {{item.term.name}}
                    </view>
                    <view class="info">
                        {{item.coursenum}}门课程，共{{item.unitsum}}学分
                    </view>
                </navigator>
                <view class="hr" wx:if="{{index != term.length-1}}"></view>
            </view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy'

export default class GradePage extends wepy.page {
    config = {
        "navigationBarTitleText": "成绩",
        "enablePullDownRefresh": true,
        "usingComponents": {
            "i-spin": "iview/spin/index",
            "i-toast": "iview/toast/index"
        },
        "backgroundTextStyle": "dark"
    }
    data = {
        term: [],
        gpaList: [],
        unittotal: 0,
        scaleToNum: {
            'A+': 4.0,
            'A': 4.0,
            'A-': 3.67,
            'B+': 3.33,
            'B': 3.0,
            'B-': 2.67,
            'C+': 2.33,
            'C': 2.00,
            'C-': 1.67,
            'D+': 1.33,
            'D': 1.00,
            'D-': 0.67,
            'F': 0.00,
            'ABS': 0.00
        }
    }

    async onPullDownRefresh() {
        await this.init();
        wx.stopPullDownRefresh();
    }

    parseGrade = (res, index) => {
        const newGrade = {
            cumulativegpa: parseFloat(res.cumulativegpa) || 0,
            termgpa: parseFloat(res.termgpa) || 0,
            unitsum: 0.0,
            coursenum: res.gpainfo.length,
            gpainfo: null,
            term: {
                name: this.term[index].name,
                id: this.term[index].id,
            }
        };
    
        newGrade.gpainfo = res.gpainfo.map(item => {
            let percent = 0.0;
            if(item.grading == 'Graded') {
                percent = this.scaleToNum[item.grade] * 100 / 4;
            } else if (item.grading == 'Hundred Point Scale') {
                percent = parseFloat(item.grade) || 0
            }
            newGrade.unitsum += parseFloat(item.units) || 0;
            return {
                ...item,
                units: parseFloat(item.units) || 0,
                percent
            }
        })
        return newGrade;
    }

    async initGrade(term) {
        const res = await wepy.$http({
            url: `/gpa?term=${term}`,
            method: 'get'
        });
        return res.data;
    }

    async init() {
        const res = await wepy.$http({
            url: '/gpa/term',
            method: 'get'
        });
        this.term = res.data;
        this.gpaList = (await Promise.all(this.term.map(item => this.initGrade(item.id)))).map(this.parseGrade);
        wepy.$storage.setAsync('gpaList', this.gpaList);
        this.unittotal = 0;
        this.gpaList.map(item => {
            this.unittotal += item.unitsum;
        })
        wx.showToast({
            title: '数据获取成功~',
            icon: 'success',
            duration: 2000
        })
        this.$apply();
        // console.log(this.gpaList);
    }

    async onLoad() {
        const cache =  await wepy.$storage.getAsync('gpaList');
        if(cache) {
            this.gpaList = cache;
            this.unittotal = 0;
            this.gpaList.map(item => {
                this.unittotal += item.unitsum;
            })
            this.$apply();
        } else {
            this.init();
        }
    }
}
</script>

<style lang="less">
page {
    background: #f7f7f7 !important;
}
.grade-page {
    .overview-container {
        margin-top: 70rpx;
        background: #ffffff;
        display: flex;
        justify-content: space-around;
        align-items: center;
        height: 180rpx;
        padding: 0rpx 10rpx;
        border: 0 solid rgba(151,151,151,0.29);
        .box {
            display: flex;
            flex-direction: column;
            align-items: center;
            .label {
                font-weight: 300;
                font-size: 26rpx;
            }
            .item {
                padding-top: 10rpx;
                font-weight: 700;
                font-size: 40rpx;
            }
        }
    }
    .term-cell {
        .hr {
            height: 1px;
            width: 680rpx;
            background: #eeeeee;
            margin: 0rpx 0rpx 0rpx 40rpx;
            // padding: 0rpx 40rpx;
        }
        margin-top: 70rpx;
        background: #ffffff;
        .term-container {
            position: relative;
            padding: 20rpx 46rpx;
            .name {
                font-size: 37rpx;
                font-weight: 600;
            }
            .info {
                margin-top: 6rpx;
                font-size: 22rpx;
                font-weight: 300;
                color: #666666;
            }
            &::after {
                content:" ";
                display:inline-block;
                width:6px;
                height:6px;
                position:absolute;
                top:50%;
                right:36rpx;
                border-width:2px 2px 0 0;
                border-color:#dddee1;
                border-style:solid;
                transform:translateY(-50%) matrix(.71,.71,-.71,.71,0,0);
            }
        }

    }
}
</style>

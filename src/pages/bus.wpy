
<template>
<view>
  <view id="header" src="../icon/imageBase64/header.json" style="background-image:url({{msg}})">
    <text id="headerText">BUS</text>
  </view>
  <view class="center">
    <text id="LeftStationText" class="StationText" @tap="changeStartStation">{{startStation}}</text>
    <view  class="whiteTab"  id="chooseStation">
      <button id="PressExchange" @tap="TapExchange">
        <image src="../icon/images/exchange.png " class="exchange"></image>
      </button>   
    </view>
    <text id="RightStationText" class="StationText" @tap="changeEndStation">{{endStation}}</text>
  </view>

  <view class="center"  wx:for="{{enumerated}}" wx:for-index="idx" wx:for-item="itemName" wx:key="item" > 
    <view class="try" style="top:{{idx*190+230}}rpx" id="{{test[idx]['classid']}}" src="./bus.js" >
      <view wx:if="{{test[idx]['psite']!='-'}}" class="smallSite">
        {{test[idx]['ssite']}}--{{test[idx]['psite']}}--{{test[idx]['esite']}}
      </view>
      <view wx:else class="smallSite">
        {{test[idx]['ssite']}}--{{test[idx]['esite']}}
      </view> 
      <view wx:if="{{test[idx]['ptime']!='-'}}" class="bigTime">
        {{test[idx]['stime']}}--{{test[idx]['ptime']}}--{{test[idx]['etime']}}
      </view>
      <view wx:else class="bigTime">
        {{test[idx]['stime']}}--{{test[idx]['etime']}}
      </view>
      <view>
      {{test[idx]['booknum']}}/{{test[idx]['busnum']}}
      </view>
    </view>
  </view>

</view>
</template>


<script>
import wepy from 'wepy'

const headerImage = require('../icon/imageBase64/header.js')
const Mydata = require('../icon/imageBase64/exportExmapleData.js')
let stations = ['紫金港校区', '海宁国际校区', '玉泉校区', '华家池校区']
let StoreRow = []

export default class extends wepy.page {
  config = {
    navigationBarTitleText: 'BUS'
  }

  data = {
    startStation: '紫金港校区',
    endStation: '海宁国际校区',
    enumerated: '',
    test: '',
    time: 'ok',
    date: 'ok',
    msg: headerImage.postBase[0]
  }

  methods = {
    TapExchange() {
      let tmp1, tmp2
      tmp1 = this.data.startStation
      tmp2 = this.data.endStation
      this.startStation = tmp2
      this.endStation = tmp1
    },
    changeStartStation() {
      for (let i = 0; i < stations.length; i++) {
        if (stations[i][0] === this.data.startStation[0]) break
      }
      this.startStation = stations[(i + 1) % stations.length]
    },
    changeEndStation() {      
      for (let i = 0; i < stations.length; i++) {
        if (stations[i][0] === this.data.endStation[0]) break
      }
      this.endStation = stations[(i + 1) % stations.length]
    }
  }
  watch = {
    startStation () {
      this.modMainArray()
    },
    endStation () {
      this.modMainArray()
    }
  }
  modMainArray() {
    StoreRow = []
    for (let i = 0; i < Mydata.TestMessage['rows'].length; i++) {
      if (Mydata.TestMessage['rows'][i]['esite'][0] === this.data.endStation[0]) {
        StoreRow.push(Mydata.TestMessage['rows'][i])
      }
    }
    let numOfTabs = StoreRow.length
    let arr = []
    for (let i = 0; i < numOfTabs; i++) {
      arr.push(i)
    }
    this.test = StoreRow
    this.enumerated = arr
  }
  async init() {
    wepy.$http({
      url: '/intlbus/bus/2018-11-09',
      method: 'get'
    })
  }
  onLoad() {
    this.modMainArray()
  }
}
</script>

<style>
page {
  display: block;
  min-height: 100%;
  background-color:rgb(42, 60, 85);
}

#header{
  width: 100%; 
  height: 200rpx;
  background-image:'';
  color:aliceblue;
  background-size:1000px 600px;
  }

#headerText{
  position: relative;
  bottom:-70rpx;
  font-family: "Times New Roman";
  font-size: 100rpx;
  left:30rpx;
}

.whiteTab{
  text-align: center;
  width:90%;
  border-radius: 30rpx;
  background-color: white;
  background-size:1000px 500px;
  position:absolute;

}

 #chooseStation{
  background-color: rgb(190, 236, 245);
  margin-top:50rpx;
  height:150rpx;
  text-align: center;
  align-items: center;
}

.center{
  display: flex;
  text-align: center;
  justify-content: center;
   vertical-align: center;
}

 #PressExchange{
   height: 150rpx;
  width:200rpx;
  border:none;
  color: rgb(190, 236, 245);
  background-color: rgb(190, 236, 245);
}
#PressExchange::after{
  border: none;
}

.exchange{
  margin-top:25rpx;
  height: 100rpx;
  width:100rpx;
}

.StationText{
position:relative;
  font-size: 35rpx;
  top:100rpx;
  z-index: 999;
border-bottom: 2px rgb(96, 102, 116) solid;
}

#LeftStationText{
  left:-120rpx;
}

#RightStationText{
  
  left:120rpx;
  
}

#chooseBus{
  margin-top: 200rpx;
  height:150rpx;
  text-align: center;
  align-items: center;
}

.try{
text-align: center;
  width:90%;
  border-radius: 30rpx;
  background-color:#F0F8FF;
  background-size:1000px 500px;
  position:absolute;
  margin-top: 200rpx;
  height:150rpx;
  align-items: center;
  vertical-align: center;
}

.smallSite{
  font-size: 25rpx;
  position:relative;
}

.bigTime{
  font-size: 50rpx;
}
</style>
<template>
    <view class="bb-page">
        <i-spin size="large" fix wx:if="{{ !loaded }}"></i-spin>
        <view>
            <view wx:for-items="{{alertList}}" wx:for-index="index" wx:for-item="item" wx:key="id" class="alert-component">
                <view class="container">
                    <view class="title-container">
                        <view class="text">
                            {{item.typePrased}}
                        </view>
                    </view>
                    <image wx:if="{{ item.content.fileUrl }}" data-fileurl="{{ item.content.fileUrl }}" bindtap="printFile" class="ding" src="/icon/ding.svg"></image>
                    <view style="width: 100%;">
                        <view class="title">
                            {{item.title}}
                        </view>
                        <view class="body">
                            <rich-text nodes="{{item.body}}"></rich-text>
                        </view>
                        <view class="footer">
                            <view>{{item.courseName}}</view> 
                            <view class="teacher">{{item.author.firstName}}</view>
                        </view>
                    </view>
                </view>
            </view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy'

export default class BBPage extends wepy.page {
    config = {
        "enablePullDownRefresh": true,
        "navigationBarTitleText": 'BlackBoard',
        "usingComponents": {
            "i-spin": "iview/spin/index",
            "i-toast": "iview/toast/index"
        }
    }

    data = {
        alertList: wepy.$storage.get("bbAlerts"),
        loaded: wepy.$storage.get("bbAlerts")? true: false
    }
    methods = {
        async printFile(e) {
            try {
                const PRINTid = wepy.$storage.get("account").PRINTid
                if(!PRINTid) {
                    throw '未绑定PRINT ID'
                }
                wx.showLoading({
                    title: '提交打印中...',
                })
                const file_url = e.currentTarget.dataset.fileurl
                const res = await wepy.$http({
                    method: 'post',
                    url: '/print/bb',
                    data: {
                        file_url,
                        paper_id: 'A4',
                        color: '0',
                        double: 'dupnone',
                        copies: 1
                    }
                })
                wx.hideLoading()
                wx.showToast({
                    title: '任务提交成功',
                    duration: 2000
                })
            } catch (error) {
                wx.hideLoading()
                wx.showToast({
                    title: error,
                    duration: 2000
                })
            }

        }
    }
    async initAlerts() {
        try {
            const res = await wepy.$http({
                method: 'get',
                url: '/blackboard/alert'
            })
            const data = res.data.map(item => {
                const type = (item.type).split(':')[0]
                // console.log(type)
                let typePrased = '其他'
                if(type === 'CO') {
                    typePrased = `内容${item.content.fileUrl ? '(支持一键打印)' : ''}`
                } else if (type === 'AN') {
                    typePrased = '公告'
                } else if (type === 'CR') {
                    typePrased = '课程'
                } else if (type === 'GB') {
                    typePrased = '成绩'
                }
                return {
                    ...item,
                    timeForSort: parseInt(item.time),
                    typePrased
                }
            }).sort((a, b) => b.timeForSort - a.timeForSort)
            wepy.$storage.setAsync("bbAlerts", data)
            return data
        } catch (error) {
            wx.showToast({
                title: error,
                duration: 2000
            })
        }

    }
    async onPullDownRefresh() {
        try {
            this.loaded = false
            this.$apply()
            await this.initAlerts()
            this.loaded = true
            this.$apply()
        } catch (error) {
            
        }
        wx.stopPullDownRefresh()
    }
    async onLoad() {
        const res = await this.initAlerts()
        this.alertList = res
        this.loaded = true
        this.$apply()
    }
}
</script>

<style lang="less">
.bb-page {
    
}


.alert-component {
    padding: 30rpx;
    .hr {
        height: 1px;
        width: 100%;
        background: #eeeeee;
        margin: 16rpx 0rpx;
    }
    .container {
        padding: 94rpx 30rpx 26rpx 30rpx;
        position: relative;
        background-image: linear-gradient(-180deg, #FFFFFF 0%, #FAFAFA 100%);
        box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.08);
        border-radius: 12rpx;
        // height: 300rpx;
        .title {
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
            line-height: 40rpx;
            font-size: 40rpx;
            margin-bottom: 14rpx;
        }
        .body {
            font-size: 20rpx;
        }
        .footer {
            font-size: 20rpx;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 10rpx;
            .teacher {
                font-weight: 700 !important;
            }
        }
        .ding {
            position: absolute;
            height: 60rpx;
            width: 60rpx;
            right: 0;
            top: 0;
        }
        .course {
            width: 100%;
            // padding: 0rpx 80rpx;
            font-size: 30rpx;
            display: flex;
            align-items: center;
            justify-content: space-between;
            .left {
                width: 400rpx;
                max-width: 400rpx;
            }
            .name {
                line-height: 30rpx;
                margin-bottom: 8rpx;
            }
            .time {
                font-size: 22rpx;
                font-weight: 300;
            }
            .loca {
                width: 200rpx;
                font-size: 24rpx;
                line-height: 24rpx;
            }
        }
        .title-container {
            position: absolute;
            left: 0;
            font-size: 40rpx;
            top: 20rpx;
            display: flex;
            justify-content: center;
            align-items: center;
            // width: 200rpx;
            padding: 10rpx 20rpx 10rpx 30rpx;
            border-radius: 20rpx 20rpx 20rpx 20rpx;
            background: #f7f7f7;
            font-size: 30rpx;
            .text::before {
                content:" ";
                display:inline-block;
                width: 16rpx;
                height: 16rpx;
                position:absolute;
                top: 50% - 10rpx;
                left: 0rpx;
                border-radius: 8rpx;
                background: #fe8f3e;
            }
        }
    }
}
</style>

<template>
<view>
  <view class="center"  wx:for="{{enumerated}}" wx:for-index="idx" wx:for-item="itemName" wx:key="item" > 
    <view class="try" style="top:{{idx*200}}rpx" id="{{businfo[idx]['classid']}}" value="{{businfo[idx]['bookid']}}">
      <view wx:if="{{businfo[idx]['psite']!='-'}}" class="smallSite">
        {{businfo[idx]['ssite']}}--{{businfo[idx]['psite']}}--{{businfo[idx]['esite']}}
      </view>
      <view wx:else class="smallSite">
        {{businfo[idx]['ssite']}}--{{businfo[idx]['esite']}}
      </view> 
      <view wx:if="{{businfo[idx]['ptime']!='-'}}" class="bigTime">
        {{businfo[idx]['stime']}}
      </view>
      <view wx:else class="bigTime">
        {{businfo[idx]['stime']}}
      </view>
      <view>
        <button class="appoint" @tap="deleteAppointment" id = "{{storeInfoGlobal[idx]['bookid']}}">
      {{businfo[idx]['busdate']}}
      </button>
      </view>
    </view>
  </view>
  </view>
</template>

<script>
import wepy from 'wepy'
const date = new Date()
export default class extends wepy.page {
  config = {
    navigationBarTitleText: 'BUS'
  }

  data = {
    startStation: '紫金港校区',
    endStation: '海宁国际校区',
    enumerated: '',
    businfo: {},
    passenger:{}
  }
  methods = {
    back: function (event) {
      wx.navigateTo({
        url: '/pages/bus',
        success: function (res) {
          console.log(res)
        },
        fail: function(res) {
          console.log(res)
        }
      })
    },
    async deleteAppointment(e) {
    let val = parseInt(e.currentTarget.id)
    let msg = JSON.stringify(this.passenger)
    this.$apply()   
    try{await wepy.$http({
        url: '/intlbus/book',
        data: {
          'Bookid':val,
          'Plist':msg
          },
        method: 'patch',
    })}catch (error) {
      console.log(error)
      wx.showToast({
        title: '提交预约失败',
        duration: 2000
      })      
  }
  }
  }
  modMainArray() {
    const numOfTabs = this.businfo.length
    const arr = []
    for (let i = 0; i < numOfTabs; i++) {
      arr.push(i)
    }
    this.enumerated = arr
    this.$apply()
  }
  async onLoad() {
    this.$apply()
    try {
      this.businfo = (await wepy.$http({
        url: '/intlbus/book',
        method: 'get'
      })).data
    } catch (error) {
      console.log(error)    
    }
    try{
      const passenger = await wepy.$http({
          url: '/intlbus/plist',
          method: 'get'
      })
      this.passenger = passenger.data[0]
      this.$apply()
  } catch (error) {
      console.log(error)      
    }
    this.$apply()
    this.modMainArray()
    this.$apply()
  }
}
</script>
<style>
page {
  display: block;
  min-height: 100%;
  background-color:rgb(42, 60, 85);
  z-index: -999;
}
</style>
<style scoped>
page {
  display: block;
  min-height: 100%;
  background-color:rgb(42, 60, 85);
  z-index: -999;
}

.whiteTab{
  text-align: center;
  width:90%;
  border-radius: 30rpx;
  background-color: white;
  background-size:1000px 500px;
  position:absolute;

}

.center{
  display: flex;
  text-align: center;
  justify-content: center;
  vertical-align: center;
}

.StationText{
position:relative;
  font-size: 35rpx;
  top:100rpx;
  z-index: 999;
border-bottom: 2px rgb(96, 102, 116) solid;
}


#chooseBus{
  margin-top: 10rpx;
  height:150rpx;
  text-align: center;
  align-items: center;
}

.try{
text-align: center;
  width:90%;
  border-radius: 30rpx;
  background-color:#F0F8FF;
  background-size:1000px 500px;
  position:absolute;
  margin-top: 50rpx;
  height:150rpx;
  align-items: center;
  vertical-align: center;
}

.smallSite{
  font-size: 25rpx;
  position:relative;
}

.bigTime{
  font-size: 50rpx;
}

#date{
  position: relative;
  top:190rpx;
  vertical-align: center;
}

#plus{
  height: 45rpx;
  width:45rpx;
  border:none;
}
.appoint{
  height: 50rpx;
  width:50%;
  border:none;
  background-color:#F0F8FF;
  border:none;
  vertical-align: center;
  font-size:30rpx;
  position:relative;
  align-content: center;
  margin-left:20%;
}

#history{
  background-color: rgb(190, 236, 245);
  width:40%;
  border-radius:4rpx;
  position:absolute;
  bottom:10%;
}

#appoi{
  background-color: rgb(190, 236, 245);
  display: flex;
  text-align: center;
  justify-content: center;
  vertical-align: center;
  border-radius:5rpx;
  font-size: 45rpx;
}

#appoi::after{
  border: none;
}
</style>
